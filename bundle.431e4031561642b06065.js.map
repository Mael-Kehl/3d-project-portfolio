{"version":3,"sources":["webpack:///./src/animations.js"],"names":["slider","document","querySelector","slides","Array","from","querySelectorAll","arrowNext","getElementById","arrowPrev","isDragging","startPos","currentTranslate","prevTranslate","animationID","currentIndex","touchStart","index","event","getPositionX","requestAnimationFrame","animation","classList","add","touchEnd","cancelAnimationFrame","movedBy","length","setPositionByIndex","remove","touchMove","currentPos","type","includes","pageX","touches","setSliderPosition","style","transform","width","offsetWidth","forEach","slide","addEventListener","window","oncontextmenu","preventDefault","stopPropagation","e","code"],"mappings":"mBAEA,MAAMA,EAASC,SAASC,cAAc,WAChCC,EAASC,MAAMC,KAAKJ,SAASK,iBAAiB,WAC9CC,EAAYN,SAASO,eAAe,cACpCC,EAAYR,SAASO,eAAe,cAE1C,IAAIE,GAAa,EACbC,EAAW,EACXC,EAAmB,EACnBC,EAAgB,EAChBC,EAAc,EACdC,EAAe,EA6BnB,SAASC,EAAWC,GAChB,OAAO,SAASC,GACZH,EAAeE,EACfN,EAAWQ,EAAaD,GACxBR,GAAa,EACbI,EAAcM,sBAAsBC,GACpCrB,EAAOsB,UAAUC,IAAI,aAI7B,SAASC,IACLd,GAAa,EACbe,qBAAqBX,GAErB,MAAMY,EAAUd,EAAmBC,EAEhCa,GAAW,IAAMX,EAAeZ,EAAOwB,OAAS,IAAGZ,GAAgB,GACnEW,EAAU,IAAMX,EAAe,IAAGA,GAAgB,GAErDa,IAEA5B,EAAOsB,UAAUO,OAAO,YAwB5B,SAASC,EAAUZ,GACf,GAAGR,EAAW,CACV,MAAMqB,EAAaZ,EAAaD,GAChCN,EAAmBC,EAAgBkB,EAAapB,GAIxD,SAASQ,EAAaD,GAClB,OAAOA,EAAMc,KAAKC,SAAS,SAAWf,EAAMgB,MAAQhB,EAAMiB,QAAQ,GAAGD,MAGzE,SAASb,IACLe,IACG1B,GAAYU,sBAAsBC,GAGzC,SAASe,IACLpC,EAAOqC,MAAMC,UAAa,cAAa1B,OAG3C,SAASgB,IACL,IAAIW,EAAQpC,EAAO,GAAGqC,YACtB5B,EAAoBG,GAAiBwB,EACrC1B,EAAgBD,EAChBwB,IAhGJR,IAEAzB,EAAOsC,SAAQ,CAACC,EAAOzB,KAMpByB,EAAMC,iBAAiB,aAAc3B,EAAWC,IAChDyB,EAAMC,iBAAiB,YAAa3B,EAAWC,IAE/CyB,EAAMC,iBAAiB,YAAab,GACpCY,EAAMC,iBAAiB,YAAab,GAEpCY,EAAMC,iBAAiB,WAAYnB,GACnCkB,EAAMC,iBAAiB,UAAWnB,GAClCkB,EAAMC,iBAAiB,aAAcnB,MAIxCoB,OAAOC,cAAgB,SAAS3B,GAG5B,OAFAA,EAAM4B,iBACN5B,EAAM6B,mBACC,GA4BXxC,EAAUoC,iBAAiB,SAAS,KAC7B5B,EAAeZ,EAAOwB,OAAS,IAAGZ,GAAgB,GACrDa,OAGJnB,EAAUkC,iBAAiB,SAAS,KAC7B5B,EAAe,IAAGA,GAAgB,GACrCa,OAGJ3B,SAAS0C,iBAAiB,WAAYK,IACnB,eAAXA,EAAEC,MACClC,EAAeZ,EAAOwB,OAAS,IAAGZ,GAAgB,GACrDa,KAEgB,cAAXoB,EAAEC,OACJlC,EAAe,IAAGA,GAAgB,GACrCa,S","file":"bundle.431e4031561642b06065.js","sourcesContent":["import './style.css';\n\nconst slider = document.querySelector('.slider');\nconst slides = Array.from(document.querySelectorAll('.slide'));\nconst arrowNext = document.getElementById(\"arrow-next\");\nconst arrowPrev = document.getElementById(\"arrow-prev\");\n\nlet isDragging = false,\n    startPos = 0,\n    currentTranslate = 0,\n    prevTranslate = 0,\n    animationID = 0,\n    currentIndex = 1;\n\nsetPositionByIndex();\n\nslides.forEach((slide, index) => {\n   //const slideImage = slide.querySelector('img');\n   //slideImage.addEventListener('dragstart', (e) => e.preventDefault());\n\n   //Touch events\n\n   slide.addEventListener('touchstart', touchStart(index));\n   slide.addEventListener('mousedown', touchStart(index));\n\n   slide.addEventListener('touchmove', touchMove);\n   slide.addEventListener('mousemove', touchMove);\n\n   slide.addEventListener('touchend', touchEnd);\n   slide.addEventListener('mouseup', touchEnd);\n   slide.addEventListener('mouseleave', touchEnd);\n\n});\n\nwindow.oncontextmenu = function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    return false;\n}\n\n\nfunction touchStart(index){\n    return function(event){\n        currentIndex = index;\n        startPos = getPositionX(event);\n        isDragging = true;\n        animationID = requestAnimationFrame(animation);\n        slider.classList.add('grabbing');\n    }\n}\n\nfunction touchEnd(){\n    isDragging = false;\n    cancelAnimationFrame(animationID);\n\n    const movedBy = currentTranslate - prevTranslate;\n\n    if(movedBy < -50 && currentIndex < slides.length - 1) currentIndex += 1;  \n    if(movedBy > 50 && currentIndex > 0) currentIndex -= 1; \n\n    setPositionByIndex();\n\n    slider.classList.remove('grabbing');\n}\n\narrowNext.addEventListener('click', () => {\n    if(currentIndex < slides.length - 1) currentIndex += 1;\n    setPositionByIndex();\n});\n\narrowPrev.addEventListener('click', () => {\n    if(currentIndex > 0) currentIndex -= 1;\n    setPositionByIndex();\n});\n\ndocument.addEventListener('keydown', (e) => {\n    if (e.code === \"ArrowRight\"){ \n        if(currentIndex < slides.length - 1) currentIndex += 1;\n        setPositionByIndex();\n    }\n    else if (e.code === \"ArrowLeft\"){\n        if(currentIndex > 0) currentIndex -= 1;\n        setPositionByIndex();\n    }\n});\n\nfunction touchMove(event){\n    if(isDragging){\n        const currentPos = getPositionX(event);\n        currentTranslate = prevTranslate + currentPos - startPos;\n    }\n}\n\nfunction getPositionX(event) {\n    return event.type.includes('mouse') ? event.pageX : event.touches[0].pageX;\n}\n\nfunction animation() {\n    setSliderPosition();\n    if(isDragging) requestAnimationFrame(animation);\n}\n\nfunction setSliderPosition() {\n    slider.style.transform = `translateX(${currentTranslate}px)`;\n}\n\nfunction setPositionByIndex() {\n    let width = slides[0].offsetWidth;\n    currentTranslate =  currentIndex * - width;\n    prevTranslate = currentTranslate;\n    setSliderPosition();\n}\n"],"sourceRoot":""}